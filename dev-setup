#!/bin/bash --login


# # # # # # # # #
# Switch to directory containing this script
__dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
echo
echo "> Switching to ${__dir}"
cd "${__dir}"
# # # # # # # # #


# // TODO: Check for rvm. Install it? No, but convince me. Or open a PR :)
# // TODO: Check for python 3.7, preferably homebrew python. Install it? Pin it? Maybe, convince me. Or open a PR :)
# // TODO: If so, check for homebrew? Install it? No, but convince me. Or open a PR :)
# // TODO: Check for pip. Install it? Pin it? Maybe, convince me. Or open a PR :)
# // TODO: Check for virtualenv. Install it? Pin it? Maybe, convince me. Or open a PR :)

# # # # # # # # #
# Use/Install ruby as specified in .ruby-version and .ruby-gemset
__ruby_environment="$(cat '.ruby-version')@$(cat '.ruby-gemset')"
echo
echo "> Running rvm use ${__ruby_environment} --create --install"
rvm use "${__ruby_environment}" --create --install
#
# # # # # # # # #


# # # # # # # # #
# Install bundler
echo
echo "> Checking for bundler installation"
GEM_SPEC_BUNDLER_OUTPUT=$( (gem spec bundler) 2>&1 )
GEM_NOT_FOUND=${GEM_SPEC_BUNDLER_OUTPUT::5}
if [[ $GEM_NOT_FOUND = "ERROR" ]];
then
    echo "> bundler is not installed."
    echo "> Installing bundler"
    gem install bundler
else
    echo "> bundler is already installed."
fi
#
# # # # # # # # #


# # # # # # # # #
# Run bundle install
echo
echo "> Running bundle install"
bundle install
#
# # # # # # # # #


# # # # # # # # #
# Create/Activate virtualenv 'licketysplit'
echo
echo "> Creating/activating virtualenv 'licketysplit'"
mkvirtualenv licketysplit
#
# # # # # # # # #


# # # # # # # # #
# Install dev-requirements.txt
echo
echo "> Running pip install -r dev-requirements.txt"
pip install -r dev-requirements.txt
#
# # # # # # # # #


# # # # # # # # #
# Install pre-push hook
echo
echo "> Installing pre-push hook"
mkdir -p ".git/hooks/"
cat <<\EOF > ".git/hooks/pre-push"
#!/bin/bash

./pre-push
EOF
chmod +x ".git/hooks/pre-push"
#
# # # # # # # # #


echo
echo "> Done. Have fun developing!"
echo
